package furniture_sale_ordering_management_system;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Wei Hong
 */
public class ModifyWorkerProfile extends javax.swing.JFrame {

    public static String ID;
    public static String Username;
    public static String Password;
    public static String Name;
    public static int Age;
    public static String Email;
    public static String PhoneNumber;
    public static String Role;
    public static String userID;
    private String selectedFilePath;
    
    
    private static final String BOOKING_FILE_PATH = "Data/Officer_Salesperson.txt";
    



    /**
     * Creates new form RoomBooking
     * @param ID
     * @param Username
     * @param Password
     * @param Name
     * @param Age
     * @param Email
     * @param PhoneNumber
     * @param Role
     */public void setInitialValues(String ID, String Username, String Password, String Name, int Age, String Email, String PhoneNumber, String Role) {
    jTextField_ID.setText(ID);
    jTextField_Username.setText(Username);
    jTextField_Password.setText(Password);
    jTextField_Name.setText(Name);
    jComboBox_age.setSelectedItem(String.valueOf(Age));
    jTextField_Email.setText(Email);
    jTextField_PhoneNumber.setText(PhoneNumber);
    jTextField_Role.setText(Role);
}
     
public ModifyWorkerProfile(String ID, String Username, String Password, String Name, int Age, String Email, String PhoneNumber, String Role, String userID){
        this.ID = ID;
        this.Username = Username;
        this.Password = Password;
        this.Name = Name;
        this.Age = Age;
        this.Email = Email;
        this.PhoneNumber = PhoneNumber;
        this.Role = Role;
        this.userID = userID;
        
    initComponents();
        // Set the title of the window
        setTitle("Modify Worker Profile");

        // Set the default close operation
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

       jComboBox_age.setModel(new DefaultComboBoxModel<>(generateAgeOptions()));
        // Set the values in the appropriate fields
    }

    private String[] generateAgeOptions() {
        int startAge = 18;
        int endAge = 60;
        int numberOfOptions = endAge - startAge + 1;

        String[] ageOptions = new String[numberOfOptions];

        for (int i = 0; i < numberOfOptions; i++) {
            ageOptions[i] = String.valueOf(startAge + i);
        }
        return ageOptions;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField_Username = new javax.swing.JTextField();
        jTextField_Password = new javax.swing.JTextField();
        jTextField_Name = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField_ID = new javax.swing.JTextField();
        jTextField_Email = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField_PhoneNumber = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField_Role = new javax.swing.JTextField();
        jLabel_icon = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton_change = new javax.swing.JButton();
        button_Edit = new furniture_sale_ordering_management_system.progressindicator.Button();
        button_Back = new furniture_sale_ordering_management_system.progressindicator.Button();
        jComboBox_age = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(238, 240, 218));

        jPanel2.setBackground(new java.awt.Color(0, 204, 255));
        jPanel2.setForeground(new java.awt.Color(0, 204, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setText("MODIFY WORKER PROFILE");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(55, 55, 55))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Username:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Password:");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Age :");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Name :");

        jTextField_Username.setEditable(false);
        jTextField_Username.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_UsernameActionPerformed(evt);
            }
        });

        jTextField_Password.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PasswordActionPerformed(evt);
            }
        });

        jTextField_Name.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_NameActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setText("Email :");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setText("ID:");

        jTextField_ID.setEditable(false);
        jTextField_ID.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_IDActionPerformed(evt);
            }
        });

        jTextField_Email.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setText("Phone Number :");

        jTextField_PhoneNumber.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setText("Role :");

        jTextField_Role.setEditable(false);
        jTextField_Role.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jLabel_icon.setForeground(new java.awt.Color(255, 255, 0));
        jLabel_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/furniture_sale_ordering_management_system/Images/profile picture1.jpg"))); // NOI18N
        jLabel_icon.setToolTipText("");
        jLabel_icon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel_icon.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel_iconAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Profile Picture");

        jButton_change.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton_change.setIcon(new javax.swing.ImageIcon(getClass().getResource("/furniture_sale_ordering_management_system/Images/change profile.png"))); // NOI18N
        jButton_change.setText("Change");
        jButton_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_changeActionPerformed(evt);
            }
        });

        button_Edit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        button_Edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/furniture_sale_ordering_management_system/Images/edit.png"))); // NOI18N
        button_Edit.setText("Edit");
        button_Edit.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        button_Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_EditActionPerformed(evt);
            }
        });

        button_Back.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        button_Back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/furniture_sale_ordering_management_system/Images/back.png"))); // NOI18N
        button_Back.setText("Back");
        button_Back.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        button_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_BackActionPerformed(evt);
            }
        });

        jComboBox_age.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBox_age.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_age.setPreferredSize(new java.awt.Dimension(64, 28));
        jComboBox_age.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(67, 67, 67))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(button_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(button_Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(40, 40, 40)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel11)
                                .addComponent(jLabel8)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField_Username, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                                .addComponent(jTextField_ID)
                                .addComponent(jTextField_Password)
                                .addComponent(jTextField_Name)
                                .addComponent(jTextField_Email)
                                .addComponent(jTextField_Role)
                                .addComponent(jComboBox_age, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField_PhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel_icon)
                        .addGap(0, 11, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jButton_change)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel_icon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField_Email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jButton_change))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_PhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Role, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button_Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_UsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_UsernameActionPerformed

    private void jTextField_PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_PasswordActionPerformed

    private void jTextField_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_NameActionPerformed

    private void jTextField_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_IDActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextField_IDActionPerformed
   public void setIconFromFile(String BOOKING_FILE_PATH) {
    String imagePath = readFilePathFromFile(BOOKING_FILE_PATH, ID);

    // Set the icon for jLabel1
    if (!imagePath.isEmpty()) {
        try {
            URL imageUrl = new File(imagePath).toURI().toURL();
            ImageIcon icon = new ImageIcon(imageUrl);
            Image image = icon.getImage().getScaledInstance(226, 226, Image.SCALE_DEFAULT);
            ImageIcon scaledIcon = new ImageIcon(image);
            jLabel_icon.setIcon(scaledIcon);
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
    } 
}

    private String readFilePathFromFile(String BOOKING_FILE_PATH, String ID) {
    try (BufferedReader reader = new BufferedReader(new FileReader(BOOKING_FILE_PATH))) {
        String line;
        while ((line = reader.readLine()) != null) {
            // Check if the line starts with the expected field
            if (line.startsWith("ID: " + ID)) {
                // Extract filepath information
                while ((line = reader.readLine()) != null) {
                    if (line.startsWith("Filepath: ")) {
                        String imagePath = line.substring("Filepath: ".length()).trim();
                        return imagePath;
                    }
                }
            } 
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
    return "";
}

    private void jButton_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_changeActionPerformed
     JFileChooser fileChooser = new JFileChooser("src/furniture_sale_ordering_management_system/Images");

    // Set the file filter to only allow image files
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpg", "jpeg", "png", "gif");
    fileChooser.setFileFilter(filter);

    // Show the file chooser dialog
    int result = fileChooser.showOpenDialog(this);

    // Check if the user selected a file
    if (result == JFileChooser.APPROVE_OPTION) {
        // Get the selected file
        File selectedFile = fileChooser.getSelectedFile();

        // Display the selected file path
        System.out.println("Selected file: " + selectedFile.getAbsolutePath());

        // Save the selected file path
        selectedFilePath = selectedFile.getAbsolutePath();

        try {
            // Convert the File to URL
            URL imageUrl = selectedFile.toURI().toURL();

            // Create ImageIcon from URL
            ImageIcon icon = new ImageIcon(imageUrl);

            // Scale the image
            Image image = icon.getImage().getScaledInstance(226, 226, Image.SCALE_DEFAULT);
            ImageIcon scaledIcon = new ImageIcon(image);

            // Set the JLabel icon using the scaled ImageIcon
            jLabel_icon.setIcon(scaledIcon);

        } catch (MalformedURLException ex) {
            // Handle exception (e.g., print error message or show a dialog)
            ex.printStackTrace();
        }
    }
    }//GEN-LAST:event_jButton_changeActionPerformed

    private void jLabel_iconAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel_iconAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel_iconAncestorAdded

    private void button_EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_EditActionPerformed
    String ID = jTextField_ID.getText();
    String Username = jTextField_Username.getText();
    String Password = jTextField_Password.getText();
    String Name = jTextField_Name.getText();
    String ageText = jComboBox_age.getSelectedItem().toString().trim();
    String Email = jTextField_Email.getText();
    String PhoneNumber = jTextField_PhoneNumber.getText();
    String Role = jTextField_Role.getText();

    // Validate input fields
    if (ID.isEmpty() || Username.isEmpty() || Password.isEmpty() || Name.isEmpty() || ageText.isEmpty() || Email.isEmpty() || PhoneNumber.isEmpty() || Role.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill in all the required fields.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validate Name field
    if (!isValidName(Name)) {
        JOptionPane.showMessageDialog(this, "Please enter a valid name.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validate Email field
    if (!isValidEmail(Email)) {
        JOptionPane.showMessageDialog(this, "Please enter a valid email address.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validate Phone Number field
    if (!isValidPhoneNumber(PhoneNumber)) {
        JOptionPane.showMessageDialog(this, "Please enter a valid phone number.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Perform the editing
    boolean isModified = modifyWorkerProfile(ID, Username, Password, Name, Age, Email, PhoneNumber, Role, selectedFilePath);

    if (isModified) {
        JOptionPane.showMessageDialog(this, "Profile modified successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        dispose();
    } else {
        JOptionPane.showMessageDialog(this, "Failed to modify the profile. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}

// Method to validate email address
private boolean isValidEmail(String email) {
    return !email.isEmpty() && email.contains("@");
}

// Method to validate phone number
private boolean isValidPhoneNumber(String phoneNumber) {
    return !phoneNumber.isEmpty() && phoneNumber.matches("\\d+");
}
    
private boolean isValidName(String name) {
    return !name.isEmpty() && name.length() >= 2 &&  name.matches("[a-zA-Z ]+");
    }//GEN-LAST:event_button_EditActionPerformed

    private void button_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_BackActionPerformed
dispose();    }//GEN-LAST:event_button_BackActionPerformed

    /**
     * @param args the command line arguments
     */
 
private boolean modifyWorkerProfile(String ID, String Username, String Password, String Name, int Age, String Email, String PhoneNumber, String Role, String selectedFilePath) {
    StringBuilder eventBuilder = new StringBuilder("Update Worker Profile");
    try {
        Path inputFile = Path.of(BOOKING_FILE_PATH);
        List<String> lines = Files.readAllLines(inputFile, StandardCharsets.UTF_8);

        boolean found = false;
        for (int i = 0; i < lines.size(); i += 10) {
            String line = lines.get(i);
            
            if (line.equals("ID: " + ID + ",")) {
                eventBuilder.append(",Changes made to profile with ID ").append(ID).append(":");
                logChange(eventBuilder, "Username", lines.get(i + 1), "Username: " + Username);
                logChange(eventBuilder, "Password", lines.get(i + 2), "Password: " + Password);
                logChange(eventBuilder, "Name", lines.get(i + 3), "Name: " + Name);
                logChange(eventBuilder, "Age", lines.get(i + 4), "Age: " + Age);
                logChange(eventBuilder, "Email", lines.get(i + 5), "Email: " + Email);
                logChange(eventBuilder, "Phone Number", lines.get(i + 6), "Phone Number: " + PhoneNumber);
                logChange(eventBuilder, "Role", lines.get(i + 7), "Role: " + Role);

                // Check if a new profile picture was selected
                if (selectedFilePath != null) {
                    int srcIndex = selectedFilePath.indexOf("src");
                    String relativePath = (srcIndex != -1) ? selectedFilePath.substring(srcIndex) : selectedFilePath;
                    logChange(eventBuilder, "Filepath", lines.get(i + 8), "Filepath: " + relativePath);
                    lines.set(i + 8, "Filepath: " + relativePath);
                } else {
                    // Keep the original file path
                    logChange(eventBuilder, "Filepath", lines.get(i + 8), "Filepath: " + lines.get(i + 8).substring("Filepath: ".length()).trim());
                }

                // Update other fields
                lines.set(i, "ID: " + ID + ",");
                lines.set(i + 1, "Username: " + Username + ",");
                lines.set(i + 2, "Password: " + Password + ",");
                lines.set(i + 3, "Name: " + Name + ",");
                lines.set(i + 4, "Age: " + Age + ",");
                lines.set(i + 5, "Email: " + Email + ",");
                lines.set(i + 6, "Phone Number: " + PhoneNumber + ",");
                lines.set(i + 7, "Role: " + Role + ",");

                found = true;
                break;
            }
        }

        if (!found) {
            System.out.println("Profile not found for ID: " + ID);
            return false;
        }

        Files.write(inputFile, lines, StandardCharsets.UTF_8, StandardOpenOption.WRITE, StandardOpenOption.TRUNCATE_EXISTING);
        Admin_Logbook adminLogbook = new Admin_Logbook(userID);
        adminLogbook.addLogEntry(userID, eventBuilder.toString());

        return true;
    } catch (IOException e) {
        e.printStackTrace();
        return false;
    }
}


private void logChange(StringBuilder eventBuilder, String fieldName, String oldValue, String newValue) {
    if (!oldValue.equals(newValue)) {
        eventBuilder.append(fieldName).append(": ").append(oldValue.substring(fieldName.length())).append(" -> ").append(newValue.substring(fieldName.length()));
    }
}


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyWorkerProfile.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyWorkerProfile.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyWorkerProfile.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyWorkerProfile.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
        ModifyWorkerProfile modifyProfile = new ModifyWorkerProfile(ID, Username, Password, Name, Age, Email, PhoneNumber, Role,userID);
        modifyProfile.setVisible(true);
 
        
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private furniture_sale_ordering_management_system.progressindicator.Button button_Back;
    private furniture_sale_ordering_management_system.progressindicator.Button button_Edit;
    private javax.swing.JButton jButton_change;
    private javax.swing.JComboBox<String> jComboBox_age;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_icon;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField_Email;
    private javax.swing.JTextField jTextField_ID;
    private javax.swing.JTextField jTextField_Name;
    private javax.swing.JTextField jTextField_Password;
    private javax.swing.JTextField jTextField_PhoneNumber;
    private javax.swing.JTextField jTextField_Role;
    private javax.swing.JTextField jTextField_Username;
    // End of variables declaration//GEN-END:variables

}
