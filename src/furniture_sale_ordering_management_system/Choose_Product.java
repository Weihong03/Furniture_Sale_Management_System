package furniture_sale_ordering_management_system;

import static furniture_sale_ordering_management_system.Choose_Product.userID;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author yuw18
 */
public class Choose_Product extends javax.swing.JFrame {
    private double totalPrice = 0.0;
    public static String userID;
    public static String ItemID;
    public static String Product;
    public static String Amount;
    /**
     * Creates new form Choose_Product1
     * @param userID
     */
    public Choose_Product(String userID) {
        this.userID = userID;
        initComponents();
        List<String> furnitureNames = readFurnitureNamesFromCSV();
        jComboBox_product.setModel(new DefaultComboBoxModel<>(furnitureNames.toArray(new String[0])));
    }
    
    private List<String> readFurnitureNamesFromCSV() {
        List<String> furnitureNames = new ArrayList<>();

        String csvFile = "Data/Yoyo-Furniture.csv";
        String line;

        try (BufferedReader br = new BufferedReader(new FileReader(csvFile))) {
            while ((line = br.readLine()) != null) {
                // Assuming that the furniture name is in the first column
                String[] data = line.split(",");
                if (data.length > 0) {
                    furnitureNames.add(data[0].trim());
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
            // Handle the exception as needed (e.g., logging, showing an error message)
        }

        return furnitureNames;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox_product = new javax.swing.JComboBox<>();
        jButton_add = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_product = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_totalamount = new javax.swing.JTextArea();
        proceed = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Product :");

        jComboBox_product.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton_add.setText("Add");
        jButton_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addActionPerformed(evt);
            }
        });

        jTextArea_product.setColumns(20);
        jTextArea_product.setRows(5);
        jScrollPane1.setViewportView(jTextArea_product);

        jTextArea_totalamount.setColumns(20);
        jTextArea_totalamount.setRows(5);
        jScrollPane2.setViewportView(jTextArea_totalamount);

        proceed.setText("Proceed");
        proceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jComboBox_product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jButton_add)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(proceed)
                .addGap(114, 114, 114))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox_product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton_add)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(proceed)
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void proceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedActionPerformed
     // Retrieve data from jTextArea_product
    String productDetails = jTextArea_product.getText();

    // Extract product and itemID from productDetails
    List<String> productList = extractValues(productDetails, "Selected Product:");
    List<String> itemIDList = extractValues(productDetails, "Item ID:");

    // Retrieve total amount details from jTextArea_totalamount
    String totalAmountDetails = jTextArea_totalamount.getText();

    // Extract the amount from totalAmountDetails
    String amount = extractAmount(totalAmountDetails);

    // Create an instance of CreateSalesOrderQuotation
    CreateSalesOrderQuotation createSalesOrderQuotation = new CreateSalesOrderQuotation(userID, itemIDList,productList, amount);

    // Pass the data to CreateSalesOrderQuotation
    createSalesOrderQuotation.setInitialValues( itemIDList,productList, amount);

    // Make CreateSalesOrderQuotation visible
    createSalesOrderQuotation.setVisible(true);

    // Close the current window
    this.dispose();
        }//GEN-LAST:event_proceedActionPerformed
   private List<String> extractValues(String input, String prefix) {
    List<String> values = new ArrayList<>();
    int prefixIndex = input.indexOf(prefix);

    while (prefixIndex != -1) {
        int startIndex = prefixIndex + prefix.length();
        int endIndex = input.indexOf("\n", startIndex);
        String value = input.substring(startIndex, endIndex).trim();
        values.add(value);

        // Continue searching for the next occurrence
        prefixIndex = input.indexOf(prefix, endIndex);
    }

    return values;
}

private String extractAmount(String input) {
    // Assuming the amount is always after "RM" in the text
    String rmPrefix = "RM";
    int rmIndex = input.indexOf(rmPrefix);
    if (rmIndex != -1) {
        int endIndex = input.indexOf("\n", rmIndex);
        if (endIndex == -1) {
            // If "\n" is not found, use the length of the string
            endIndex = input.length();
        }
        return input.substring(rmIndex, endIndex).trim();
    } else {
        // If "RM" is not found, you may need additional logic based on your actual data format
        return input.trim();
    }
}
    private void jButton_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addActionPerformed
         String selectedProduct = (String) jComboBox_product.getSelectedItem();

    // Read additional data (item ID, category, and price) based on the selected product
    String csvFile = "Data/Yoyo-Furniture.csv";
    try (BufferedReader br = new BufferedReader(new FileReader(csvFile))) {
        String line;
        while ((line = br.readLine()) != null) {
            String[] data = line.split(",");
            if (data.length > 0 && data[0].trim().equals(selectedProduct)) {
                // Assuming item ID is in the second column, category in the third, and price in the fourth
                String itemID = data[1].trim();
                String priceStr = data[2].trim();

                // Convert price to double and add it to the total
                double price = Double.parseDouble(priceStr);
                totalPrice += price;

                // Append additional data to jTextArea_product
                jTextArea_product.append("Selected Product: " + selectedProduct + "\n");
                jTextArea_product.append("Item ID: " + itemID + "\n");
                jTextArea_product.append("Price: " + "RM" + price + "\n");
                jTextArea_product.append("\n");

                break; // No need to continue reading once the data is found
            }
        }
    } catch (IOException | NumberFormatException e) {
        e.printStackTrace();
        // Handle the exception as needed (e.g., logging, showing an error message)
    }

    // Optionally, you can clear the selection in the jComboBox_product
    jComboBox_product.setSelectedIndex(-1);
    
    jTextArea_totalamount.setText("Total Price: RM" + totalPrice + "\n");
    }//GEN-LAST:event_jButton_addActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Choose_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Choose_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Choose_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Choose_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Choose_Product chooseproduct = new Choose_Product(userID);
                chooseproduct.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_add;
    private javax.swing.JComboBox<String> jComboBox_product;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea_product;
    private javax.swing.JTextArea jTextArea_totalamount;
    private javax.swing.JButton proceed;
    // End of variables declaration//GEN-END:variables
}
